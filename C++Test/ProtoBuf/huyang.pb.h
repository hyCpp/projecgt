// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: huyang.proto

#ifndef PROTOBUF_INCLUDED_huyang_2eproto
#define PROTOBUF_INCLUDED_huyang_2eproto

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3006001
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3006001 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/inlined_string_field.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/generated_enum_reflection.h>
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)
#define PROTOBUF_INTERNAL_EXPORT_protobuf_huyang_2eproto 

namespace protobuf_huyang_2eproto {
// Internal implementation detail -- do not use these members.
struct TableStruct {
  static const ::google::protobuf::internal::ParseTableField entries[];
  static const ::google::protobuf::internal::AuxillaryParseTableField aux[];
  static const ::google::protobuf::internal::ParseTable schema[1];
  static const ::google::protobuf::internal::FieldMetadata field_metadata[];
  static const ::google::protobuf::internal::SerializationTable serialization_table[];
  static const ::google::protobuf::uint32 offsets[];
};
void AddDescriptors();
}  // namespace protobuf_huyang_2eproto
namespace my {
class huyang;
class huyangDefaultTypeInternal;
extern huyangDefaultTypeInternal _huyang_default_instance_;
}  // namespace my
namespace google {
namespace protobuf {
template<> ::my::huyang* Arena::CreateMaybeMessage<::my::huyang>(Arena*);
}  // namespace protobuf
}  // namespace google
namespace my {

enum huyang_huyangStatus {
  huyang_huyangStatus_one = 1,
  huyang_huyangStatus_two = 2,
  huyang_huyangStatus_three = 3,
  huyang_huyangStatus_max = 4
};
bool huyang_huyangStatus_IsValid(int value);
const huyang_huyangStatus huyang_huyangStatus_huyangStatus_MIN = huyang_huyangStatus_one;
const huyang_huyangStatus huyang_huyangStatus_huyangStatus_MAX = huyang_huyangStatus_max;
const int huyang_huyangStatus_huyangStatus_ARRAYSIZE = huyang_huyangStatus_huyangStatus_MAX + 1;

const ::google::protobuf::EnumDescriptor* huyang_huyangStatus_descriptor();
inline const ::std::string& huyang_huyangStatus_Name(huyang_huyangStatus value) {
  return ::google::protobuf::internal::NameOfEnum(
    huyang_huyangStatus_descriptor(), value);
}
inline bool huyang_huyangStatus_Parse(
    const ::std::string& name, huyang_huyangStatus* value) {
  return ::google::protobuf::internal::ParseNamedEnum<huyang_huyangStatus>(
    huyang_huyangStatus_descriptor(), name, value);
}
// ===================================================================

class huyang : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:my.huyang) */ {
 public:
  huyang();
  virtual ~huyang();

  huyang(const huyang& from);

  inline huyang& operator=(const huyang& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  huyang(huyang&& from) noexcept
    : huyang() {
    *this = ::std::move(from);
  }

  inline huyang& operator=(huyang&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const huyang& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const huyang* internal_default_instance() {
    return reinterpret_cast<const huyang*>(
               &_huyang_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    0;

  void Swap(huyang* other);
  friend void swap(huyang& a, huyang& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline huyang* New() const final {
    return CreateMaybeMessage<huyang>(NULL);
  }

  huyang* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<huyang>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const huyang& from);
  void MergeFrom(const huyang& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(huyang* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  typedef huyang_huyangStatus huyangStatus;
  static const huyangStatus one =
    huyang_huyangStatus_one;
  static const huyangStatus two =
    huyang_huyangStatus_two;
  static const huyangStatus three =
    huyang_huyangStatus_three;
  static const huyangStatus max =
    huyang_huyangStatus_max;
  static inline bool huyangStatus_IsValid(int value) {
    return huyang_huyangStatus_IsValid(value);
  }
  static const huyangStatus huyangStatus_MIN =
    huyang_huyangStatus_huyangStatus_MIN;
  static const huyangStatus huyangStatus_MAX =
    huyang_huyangStatus_huyangStatus_MAX;
  static const int huyangStatus_ARRAYSIZE =
    huyang_huyangStatus_huyangStatus_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  huyangStatus_descriptor() {
    return huyang_huyangStatus_descriptor();
  }
  static inline const ::std::string& huyangStatus_Name(huyangStatus value) {
    return huyang_huyangStatus_Name(value);
  }
  static inline bool huyangStatus_Parse(const ::std::string& name,
      huyangStatus* value) {
    return huyang_huyangStatus_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // optional string result = 1;
  bool has_result() const;
  void clear_result();
  static const int kResultFieldNumber = 1;
  const ::std::string& result() const;
  void set_result(const ::std::string& value);
  #if LANG_CXX11
  void set_result(::std::string&& value);
  #endif
  void set_result(const char* value);
  void set_result(const char* value, size_t size);
  ::std::string* mutable_result();
  ::std::string* release_result();
  void set_allocated_result(::std::string* result);

  // optional .my.huyang.huyangStatus status = 2;
  bool has_status() const;
  void clear_status();
  static const int kStatusFieldNumber = 2;
  ::my::huyang_huyangStatus status() const;
  void set_status(::my::huyang_huyangStatus value);

  // @@protoc_insertion_point(class_scope:my.huyang)
 private:
  void set_has_result();
  void clear_has_result();
  void set_has_status();
  void clear_has_status();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr result_;
  int status_;
  friend struct ::protobuf_huyang_2eproto::TableStruct;
};
// ===================================================================


// ===================================================================

#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// huyang

// optional string result = 1;
inline bool huyang::has_result() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void huyang::set_has_result() {
  _has_bits_[0] |= 0x00000001u;
}
inline void huyang::clear_has_result() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void huyang::clear_result() {
  result_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_result();
}
inline const ::std::string& huyang::result() const {
  // @@protoc_insertion_point(field_get:my.huyang.result)
  return result_.GetNoArena();
}
inline void huyang::set_result(const ::std::string& value) {
  set_has_result();
  result_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:my.huyang.result)
}
#if LANG_CXX11
inline void huyang::set_result(::std::string&& value) {
  set_has_result();
  result_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:my.huyang.result)
}
#endif
inline void huyang::set_result(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_result();
  result_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:my.huyang.result)
}
inline void huyang::set_result(const char* value, size_t size) {
  set_has_result();
  result_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:my.huyang.result)
}
inline ::std::string* huyang::mutable_result() {
  set_has_result();
  // @@protoc_insertion_point(field_mutable:my.huyang.result)
  return result_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* huyang::release_result() {
  // @@protoc_insertion_point(field_release:my.huyang.result)
  if (!has_result()) {
    return NULL;
  }
  clear_has_result();
  return result_.ReleaseNonDefaultNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void huyang::set_allocated_result(::std::string* result) {
  if (result != NULL) {
    set_has_result();
  } else {
    clear_has_result();
  }
  result_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), result);
  // @@protoc_insertion_point(field_set_allocated:my.huyang.result)
}

// optional .my.huyang.huyangStatus status = 2;
inline bool huyang::has_status() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void huyang::set_has_status() {
  _has_bits_[0] |= 0x00000002u;
}
inline void huyang::clear_has_status() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void huyang::clear_status() {
  status_ = 1;
  clear_has_status();
}
inline ::my::huyang_huyangStatus huyang::status() const {
  // @@protoc_insertion_point(field_get:my.huyang.status)
  return static_cast< ::my::huyang_huyangStatus >(status_);
}
inline void huyang::set_status(::my::huyang_huyangStatus value) {
  assert(::my::huyang_huyangStatus_IsValid(value));
  set_has_status();
  status_ = value;
  // @@protoc_insertion_point(field_set:my.huyang.status)
}

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__

// @@protoc_insertion_point(namespace_scope)

}  // namespace my

namespace google {
namespace protobuf {

template <> struct is_proto_enum< ::my::huyang_huyangStatus> : ::std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::my::huyang_huyangStatus>() {
  return ::my::huyang_huyangStatus_descriptor();
}

}  // namespace protobuf
}  // namespace google

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_INCLUDED_huyang_2eproto
