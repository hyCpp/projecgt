// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: huyang.proto

#include "huyang.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// This is a temporary google only hack
#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
#include "third_party/protobuf/version.h"
#endif
// @@protoc_insertion_point(includes)

namespace my {
class huyangDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<huyang>
      _instance;
} _huyang_default_instance_;
}  // namespace my
namespace protobuf_huyang_2eproto {
static void InitDefaultshuyang() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::my::_huyang_default_instance_;
    new (ptr) ::my::huyang();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::my::huyang::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_huyang =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultshuyang}, {}};

void InitDefaults() {
  ::google::protobuf::internal::InitSCC(&scc_info_huyang.base);
}

::google::protobuf::Metadata file_level_metadata[1];
const ::google::protobuf::EnumDescriptor* file_level_enum_descriptors[1];

const ::google::protobuf::uint32 TableStruct::offsets[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::my::huyang, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::my::huyang, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::my::huyang, result_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::my::huyang, status_),
  0,
  1,
};
static const ::google::protobuf::internal::MigrationSchema schemas[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  { 0, 7, sizeof(::my::huyang)},
};

static ::google::protobuf::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::google::protobuf::Message*>(&::my::_huyang_default_instance_),
};

void protobuf_AssignDescriptors() {
  AddDescriptors();
  AssignDescriptors(
      "huyang.proto", schemas, file_default_instances, TableStruct::offsets,
      file_level_metadata, file_level_enum_descriptors, NULL);
}

void protobuf_AssignDescriptorsOnce() {
  static ::google::protobuf::internal::once_flag once;
  ::google::protobuf::internal::call_once(once, protobuf_AssignDescriptors);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_PROTOBUF_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::internal::RegisterAllTypes(file_level_metadata, 1);
}

void AddDescriptorsImpl() {
  InitDefaults();
  static const char descriptor[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
      "\n\014huyang.proto\022\002my\"w\n\006huyang\022\016\n\006result\030\001"
      " \001(\t\022\'\n\006status\030\002 \001(\0162\027.my.huyang.huyangS"
      "tatus\"4\n\014huyangStatus\022\007\n\003one\020\001\022\007\n\003two\020\002\022"
      "\t\n\005three\020\003\022\007\n\003max\020\004"
  };
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
      descriptor, 139);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "huyang.proto", &protobuf_RegisterTypes);
}

void AddDescriptors() {
  static ::google::protobuf::internal::once_flag once;
  ::google::protobuf::internal::call_once(once, AddDescriptorsImpl);
}
// Force AddDescriptors() to be called at dynamic initialization time.
struct StaticDescriptorInitializer {
  StaticDescriptorInitializer() {
    AddDescriptors();
  }
} static_descriptor_initializer;
}  // namespace protobuf_huyang_2eproto
namespace my {
const ::google::protobuf::EnumDescriptor* huyang_huyangStatus_descriptor() {
  protobuf_huyang_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_huyang_2eproto::file_level_enum_descriptors[0];
}
bool huyang_huyangStatus_IsValid(int value) {
  switch (value) {
    case 1:
    case 2:
    case 3:
    case 4:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const huyang_huyangStatus huyang::one;
const huyang_huyangStatus huyang::two;
const huyang_huyangStatus huyang::three;
const huyang_huyangStatus huyang::max;
const huyang_huyangStatus huyang::huyangStatus_MIN;
const huyang_huyangStatus huyang::huyangStatus_MAX;
const int huyang::huyangStatus_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

// ===================================================================

void huyang::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int huyang::kResultFieldNumber;
const int huyang::kStatusFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

huyang::huyang()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_huyang_2eproto::scc_info_huyang.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:my.huyang)
}
huyang::huyang(const huyang& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  result_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_result()) {
    result_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.result_);
  }
  status_ = from.status_;
  // @@protoc_insertion_point(copy_constructor:my.huyang)
}

void huyang::SharedCtor() {
  result_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  status_ = 1;
}

huyang::~huyang() {
  // @@protoc_insertion_point(destructor:my.huyang)
  SharedDtor();
}

void huyang::SharedDtor() {
  result_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void huyang::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* huyang::descriptor() {
  ::protobuf_huyang_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_huyang_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const huyang& huyang::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_huyang_2eproto::scc_info_huyang.base);
  return *internal_default_instance();
}


void huyang::Clear() {
// @@protoc_insertion_point(message_clear_start:my.huyang)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      result_.ClearNonDefaultToEmptyNoArena();
    }
    status_ = 1;
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool huyang::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:my.huyang)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string result = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_result()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->result().data(), static_cast<int>(this->result().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "my.huyang.result");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .my.huyang.huyangStatus status = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::my::huyang_huyangStatus_IsValid(value)) {
            set_status(static_cast< ::my::huyang_huyangStatus >(value));
          } else {
            mutable_unknown_fields()->AddVarint(
                2, static_cast< ::google::protobuf::uint64>(value));
          }
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:my.huyang)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:my.huyang)
  return false;
#undef DO_
}

void huyang::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:my.huyang)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional string result = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->result().data(), static_cast<int>(this->result().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "my.huyang.result");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->result(), output);
  }

  // optional .my.huyang.huyangStatus status = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      2, this->status(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:my.huyang)
}

::google::protobuf::uint8* huyang::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:my.huyang)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional string result = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->result().data(), static_cast<int>(this->result().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "my.huyang.result");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->result(), target);
  }

  // optional .my.huyang.huyangStatus status = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      2, this->status(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:my.huyang)
  return target;
}

size_t huyang::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:my.huyang)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (_has_bits_[0 / 32] & 3u) {
    // optional string result = 1;
    if (has_result()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->result());
    }

    // optional .my.huyang.huyangStatus status = 2;
    if (has_status()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::EnumSize(this->status());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void huyang::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:my.huyang)
  GOOGLE_DCHECK_NE(&from, this);
  const huyang* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const huyang>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:my.huyang)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:my.huyang)
    MergeFrom(*source);
  }
}

void huyang::MergeFrom(const huyang& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:my.huyang)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_result();
      result_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.result_);
    }
    if (cached_has_bits & 0x00000002u) {
      status_ = from.status_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void huyang::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:my.huyang)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void huyang::CopyFrom(const huyang& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:my.huyang)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool huyang::IsInitialized() const {
  return true;
}

void huyang::Swap(huyang* other) {
  if (other == this) return;
  InternalSwap(other);
}
void huyang::InternalSwap(huyang* other) {
  using std::swap;
  result_.Swap(&other->result_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(status_, other->status_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata huyang::GetMetadata() const {
  protobuf_huyang_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_huyang_2eproto::file_level_metadata[kIndexInFileMessages];
}


// @@protoc_insertion_point(namespace_scope)
}  // namespace my
namespace google {
namespace protobuf {
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::my::huyang* Arena::CreateMaybeMessage< ::my::huyang >(Arena* arena) {
  return Arena::CreateInternal< ::my::huyang >(arena);
}
}  // namespace protobuf
}  // namespace google

// @@protoc_insertion_point(global_scope)
